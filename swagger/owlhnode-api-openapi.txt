{
    "swagger": "2.0",
    "info": {
        "title": "OwlH Node API",
        "description": "OwlH node API",
        "version": "0.1.0",
        "termsOfService": "http://www.owlh.net",
        "contact": {
            "email": "support@owlh.net"
        }
    },
    "basePath": "/node",
    "paths": {
        "/analyzer/changeAnalyzerStatus": {
            "put": {
                "tags": [
                    "analyzer"
                ],
                "description": "ChangeAnalyzerStatus status",
                "operationId": "AnalyzerController.ChangeAnalyzerStatus",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.analyzer"
                        }
                    }
                }
            }
        },
        "/analyzer/pingAnalyzer": {
            "get": {
                "tags": [
                    "analyzer"
                ],
                "description": "PingAnalyzer status",
                "operationId": "AnalyzerController.PingAnalyzer",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.analyzer"
                        }
                    }
                }
            }
        },
        "/analyzer/sync": {
            "put": {
                "tags": [
                    "analyzer"
                ],
                "description": "SyncAnalyzer status",
                "operationId": "AnalyzerController.SyncAnalyzer",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.analyzer"
                        }
                    }
                }
            }
        },
        "/autentication/": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Get Master Token",
                "operationId": "AutenticationController.CreateMasterToken"
            }
        },
        "/autentication/addGroup": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add groups from Master",
                "operationId": "AutenticationController.AddGroupFromMaster"
            }
        },
        "/autentication/addPerm": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add permissions from Master",
                "operationId": "AutenticationController.SyncPermissions"
            }
        },
        "/autentication/addRole": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add roles from Master",
                "operationId": "AutenticationController.AddRolesFromMaster"
            }
        },
        "/autentication/addRoleGroups": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add permissions from Master",
                "operationId": "AutenticationController.SyncRoleGroups"
            }
        },
        "/autentication/addRolePerm": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add role permissions relation table from Master",
                "operationId": "AutenticationController.SyncRolePermissions"
            }
        },
        "/autentication/addUgr": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add userGroupRoles from Master",
                "operationId": "AutenticationController.AddUserGroupRolesFromMaster"
            }
        },
        "/autentication/addUser": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add users from Master",
                "operationId": "AutenticationController.AddUserFromMaster"
            }
        },
        "/autentication/localuserpasswd": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Change local user pass using basicAuth",
                "operationId": "AutenticationController.ChangeLocalUserPassword"
            }
        },
        "/authentication/": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Get Master Token",
                "operationId": "AutenticationController.CreateMasterToken"
            }
        },
        "/authentication/addGroup": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add groups from Master",
                "operationId": "AutenticationController.AddGroupFromMaster"
            }
        },
        "/authentication/addPerm": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add permissions from Master",
                "operationId": "AutenticationController.SyncPermissions"
            }
        },
        "/authentication/addRole": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add roles from Master",
                "operationId": "AutenticationController.AddRolesFromMaster"
            }
        },
        "/authentication/addRoleGroups": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add permissions from Master",
                "operationId": "AutenticationController.SyncRoleGroups"
            }
        },
        "/authentication/addRolePerm": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add role permissions relation table from Master",
                "operationId": "AutenticationController.SyncRolePermissions"
            }
        },
        "/authentication/addUgr": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add userGroupRoles from Master",
                "operationId": "AutenticationController.AddUserGroupRolesFromMaster"
            }
        },
        "/authentication/addUser": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Add users from Master",
                "operationId": "AutenticationController.AddUserFromMaster"
            }
        },
        "/authentication/localuserpasswd": {
            "put": {
                "tags": [
                    "authentication"
                ],
                "description": "Change local user pass using basicAuth",
                "operationId": "AutenticationController.ChangeLocalUserPassword"
            }
        },
        "/changecontrol/": {
            "get": {
                "tags": [
                    "changecontrol"
                ],
                "description": "Get changeControl database values",
                "operationId": "ChangecontrolController.GetChangeControlNode",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.changecontrol"
                        }
                    }
                }
            }
        },
        "/collector/play": {
            "get": {
                "tags": [
                    "collector"
                ],
                "description": "Play collector",
                "operationId": "CollectorController.PlayCollector",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Collector"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/collector/show": {
            "get": {
                "tags": [
                    "collector"
                ],
                "description": "Show collector",
                "operationId": "CollectorController.ShowCollector",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Collector"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/collector/stop": {
            "get": {
                "tags": [
                    "collector"
                ],
                "description": "Stop collector",
                "operationId": "CollectorController.StopCollector",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Collector"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dataflow/changeDataflowValues": {
            "put": {
                "tags": [
                    "dataflow"
                ],
                "description": "Make a deploy for selected action",
                "operationId": "DataflowController.ChangeDataflowValues",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dataflow/deleteDataFlowValueSelected": {
            "delete": {
                "tags": [
                    "dataflow"
                ],
                "description": "Save socket information to Network at node dataflow",
                "operationId": "DataflowController.DeleteDataFlowValueSelected",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dataflow/loadDataflowValues": {
            "get": {
                "tags": [
                    "dataflow"
                ],
                "description": "Load data flow values for",
                "operationId": "DataflowController.LoadDataflowValues",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dataflow/saveNewLocal": {
            "put": {
                "tags": [
                    "dataflow"
                ],
                "description": "Save socket information to Network at node dataflow",
                "operationId": "DataflowController.SaveNewLocal",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dataflow/saveSocketToNetwork": {
            "put": {
                "tags": [
                    "dataflow"
                ],
                "description": "Save socket information to Network at node dataflow",
                "operationId": "DataflowController.SaveSocketToNetwork",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dataflow/saveSocketToNetworkSelected": {
            "put": {
                "tags": [
                    "dataflow"
                ],
                "description": "Save socket information to Network at node dataflow",
                "operationId": "DataflowController.SaveSocketToNetworkSelected",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dataflow/saveVxLAN": {
            "put": {
                "tags": [
                    "dataflow"
                ],
                "description": "Save socket information to Network at node dataflow",
                "operationId": "DataflowController.SaveVxLAN",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/deploy/": {
            "get": {
                "tags": [
                    "deploy"
                ],
                "description": "Get all the deploy file status",
                "operationId": "DeployController.Deploy",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "deploy"
                ],
                "description": "Make a deploy for selected action",
                "operationId": "DeployController.DeployNode",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/file/": {
            "get": {
                "tags": [
                    "file"
                ],
                "description": "save changes over requested file on webpage \"edit.html\"",
                "operationId": "FileController.GetAllFiles",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "file"
                ],
                "description": "save changes over requested file on webpage \"edit.html\"",
                "operationId": "FileController.SaveFile",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/file/reloadFilesData": {
            "get": {
                "tags": [
                    "file"
                ],
                "description": "load new files size",
                "operationId": "FileController.ReloadFilesData",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/file/{fileName}": {
            "get": {
                "tags": [
                    "file"
                ],
                "description": "send back the requested file from master for show on webpage \"edit.html\"",
                "operationId": "FileController.SendFile",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/group/groupSync": {
            "put": {
                "tags": [
                    "group"
                ],
                "description": "Sync ruleset file from group",
                "operationId": "GroupController.SyncGroupRulesetToNode",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Node"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/group/suricata": {
            "put": {
                "tags": [
                    "group"
                ],
                "description": "Suricata start/stop for group node",
                "operationId": "GroupController.SuricataGroupService",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    }
                }
            }
        },
        "/group/sync": {
            "put": {
                "tags": [
                    "group"
                ],
                "description": "get Suricata group values",
                "operationId": "GroupController.SyncSuricataGroupValues",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    }
                }
            }
        },
        "/hwaddmng/": {
            "post": {
                "tags": [
                    "hwaddmng"
                ],
                "description": "Add MAC and IP to Knownmacs",
                "operationId": "HwaddmngController.AddMacIp"
            }
        },
        "/hwaddmng/config": {
            "get": {
                "tags": [
                    "hwaddmng"
                ],
                "description": "Config ARPConfig",
                "operationId": "HwaddmngController.Config"
            },
            "put": {
                "tags": [
                    "hwaddmng"
                ],
                "description": "Locad ARPConfig",
                "operationId": "HwaddmngController.LoadConfig"
            },
            "post": {
                "tags": [
                    "hwaddmng"
                ],
                "description": "Config ARPConfig",
                "operationId": "HwaddmngController.Config"
            }
        },
        "/hwaddmng/db": {
            "post": {
                "tags": [
                    "hwaddmng"
                ],
                "description": "DB Management",
                "operationId": "HwaddmngController.DbManagement"
            }
        },
        "/incidents/": {
            "get": {
                "tags": [
                    "incidents"
                ],
                "description": "Get incidents database values",
                "operationId": "IncidentslController.GetIncidentsNode",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.incidents"
                        }
                    }
                }
            }
        },
        "/monitor/": {
            "get": {
                "tags": [
                    "monitor"
                ],
                "description": "get last node stats",
                "operationId": "MonitorController.GetLastStats",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.monitor"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "monitor"
                ],
                "description": "Put incidents into database",
                "operationId": "MonitorController.PutIncidentNode",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.monitor"
                        }
                    }
                }
            }
        },
        "/monitor/addFile": {
            "post": {
                "tags": [
                    "monitor"
                ],
                "description": "Add file to monitor",
                "operationId": "MonitorController.AddMonitorFile",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.monitor"
                        }
                    }
                }
            }
        },
        "/monitor/changeRotationStatus": {
            "put": {
                "tags": [
                    "monitor"
                ],
                "description": "Change monitor rotation file status",
                "operationId": "MonitorController.ChangeRotationStatus",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.monitor"
                        }
                    }
                }
            }
        },
        "/monitor/deleteFile": {
            "delete": {
                "tags": [
                    "monitor"
                ],
                "description": "Add file to monitor",
                "operationId": "MonitorController.DeleteMonitorFile",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.monitor"
                        }
                    }
                }
            }
        },
        "/monitor/editRotation": {
            "put": {
                "tags": [
                    "monitor"
                ],
                "description": "Edit monitor rotation file parameters",
                "operationId": "MonitorController.EditRotation",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.monitor"
                        }
                    }
                }
            }
        },
        "/monitor/pingMonitorFiles": {
            "get": {
                "tags": [
                    "monitor"
                ],
                "description": "get monitor file stats",
                "operationId": "MonitorController.PingMonitorFiles",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.monitor"
                        }
                    }
                }
            }
        },
        "/net/": {
            "get": {
                "tags": [
                    "net"
                ],
                "description": "get network data",
                "operationId": "NetController.GetNetworkData"
            },
            "put": {
                "tags": [
                    "net"
                ],
                "description": "Make a deploy for selected action",
                "operationId": "NetController.UpdateNetworkInterface",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.file"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/net/values": {
            "get": {
                "tags": [
                    "net"
                ],
                "description": "get network values selected by user",
                "operationId": "NetController.LoadNetworkValuesSelected"
            }
        },
        "/ping/": {
            "get": {
                "tags": [
                    "ping"
                ],
                "description": "get ping for node",
                "operationId": "PingController.PingNode"
            },
            "delete": {
                "tags": [
                    "ping"
                ],
                "description": "Save node information",
                "operationId": "PingController.DeleteNode",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ping"
                        }
                    }
                }
            }
        },
        "/ping/PingPluginsNode": {
            "get": {
                "tags": [
                    "ping"
                ],
                "description": "PingPluginsNode status",
                "operationId": "PingController.PingPluginsNode",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ping"
                        }
                    }
                }
            }
        },
        "/ping/deployservice": {
            "put": {
                "tags": [
                    "ping"
                ],
                "description": "get ping for node",
                "operationId": "PingController.DeployService"
            }
        },
        "/ping/mainconf": {
            "get": {
                "tags": [
                    "ping"
                ],
                "description": "get ping for node",
                "operationId": "PingController.GetMainconfData"
            }
        },
        "/ping/saveNodeInformation": {
            "put": {
                "tags": [
                    "ping"
                ],
                "description": "Save node information",
                "operationId": "PingController.SaveNodeInformation",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ping"
                        }
                    }
                }
            }
        },
        "/ping/services": {
            "get": {
                "tags": [
                    "ping"
                ],
                "description": "get ping for node",
                "operationId": "PingController.PingService"
            }
        },
        "/ping/updateNode": {
            "put": {
                "tags": [
                    "ping"
                ],
                "description": "update node data",
                "operationId": "PingController.UpdateNodeData"
            }
        },
        "/plugin/ChangeMainServiceStatus": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "Change a specific plugin service status",
                "operationId": "PluginController.ChangeMainServiceStatus"
            }
        },
        "/plugin/ChangeServiceStatus": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "Change a specific plugin service status",
                "operationId": "PluginController.ChangeServiceStatus"
            }
        },
        "/plugin/addService": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "Add new service like Suricata or Zeek",
                "operationId": "PluginController.AddPluginService()",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    }
                }
            }
        },
        "/plugin/changeSuricataTable": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "Change a specific plugin service status",
                "operationId": "PluginController.ChangeSuricataTable"
            }
        },
        "/plugin/deleteService": {
            "delete": {
                "tags": [
                    "plugin"
                ],
                "description": "delete a specific plugin service",
                "operationId": "PluginController.DeleteService"
            }
        },
        "/plugin/deployStapService": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "Change a specific plugin service status",
                "operationId": "PluginController.DeployStapService"
            }
        },
        "/plugin/getCommands": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "get commands for specific service",
                "operationId": "PluginController.GetServiceCommands"
            }
        },
        "/plugin/modifyNodeOptionValues": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "Change a specific plugin service status",
                "operationId": "PluginController.ModifyNodeOptionValues"
            }
        },
        "/plugin/setRuleset": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "get commands for specific service",
                "operationId": "PluginController.SaveSurictaRulesetSelected"
            }
        },
        "/plugin/stopStapService": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "Change a specific plugin service status",
                "operationId": "PluginController.StopStapService"
            }
        },
        "/plugin/updateSuricataValue": {
            "put": {
                "tags": [
                    "plugin"
                ],
                "description": "Change a specific plugin service status",
                "operationId": "PluginController.UpdateSuricataValue"
            }
        },
        "/ports/": {
            "get": {
                "tags": [
                    "ports"
                ],
                "description": "get ports",
                "operationId": "PortsController.ShowPorts",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ports"
                        }
                    }
                }
            }
        },
        "/ports/PingPorts": {
            "get": {
                "tags": [
                    "ports"
                ],
                "description": "PingPorts status",
                "operationId": "PortsController.PingPorts",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ports"
                        }
                    }
                }
            }
        },
        "/ports/delete": {
            "put": {
                "tags": [
                    "ports"
                ],
                "description": "delete ports",
                "operationId": "PortsController.DeletePorts",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ports"
                        }
                    }
                }
            }
        },
        "/ports/deleteAll": {
            "put": {
                "tags": [
                    "ports"
                ],
                "description": "delete all ports",
                "operationId": "PortsController.DeleteAllPorts",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ports"
                        }
                    }
                }
            }
        },
        "/ports/mode": {
            "put": {
                "tags": [
                    "ports"
                ],
                "description": "put new mode",
                "operationId": "PortsController.ChangeMode",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ports"
                        }
                    }
                }
            }
        },
        "/ports/status": {
            "put": {
                "tags": [
                    "ports"
                ],
                "description": "put new status",
                "operationId": "PortsController.ChangeStatus",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ports"
                        }
                    }
                }
            }
        },
        "/stap/": {
            "get": {
                "tags": [
                    "stap"
                ],
                "description": "get all servers stap",
                "operationId": "StapController.GetAllServers",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.stap"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "stap"
                ],
                "description": "Add a new server to stap",
                "operationId": "StapController.AddServer",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.stap"
                        }
                    }
                }
            }
        },
        "/stap/DeleteStapServer/{serveruuid}": {
            "put": {
                "tags": [
                    "stap"
                ],
                "description": "Run specific Stap server",
                "operationId": "StapController.DeleteStapServer",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Stap"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/stap/EditStapServer": {
            "put": {
                "tags": [
                    "stap"
                ],
                "description": "Edit specific Stap server",
                "operationId": "StapController.EditStapServer",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Stap"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/stap/PingServerStap/{server}": {
            "get": {
                "tags": [
                    "stap"
                ],
                "description": "ping stap servers",
                "operationId": "StapController.PingServerStap",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.stap"
                        }
                    }
                }
            }
        },
        "/stap/RunStap/{uuid}": {
            "put": {
                "tags": [
                    "stap"
                ],
                "description": "Run Stap system",
                "operationId": "StapController.RunStap",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Stap"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/stap/RunStapServer/{serveruuid}": {
            "put": {
                "tags": [
                    "stap"
                ],
                "description": "Run specific Stap server",
                "operationId": "StapController.RunStapServer",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Stap"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/stap/StopStap/{uuid}": {
            "put": {
                "tags": [
                    "stap"
                ],
                "description": "Run Stap system",
                "operationId": "StapController.StopStap",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Stap"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/stap/StopStapServer/{serveruuid}": {
            "put": {
                "tags": [
                    "stap"
                ],
                "description": "Stop specific Stap server",
                "operationId": "StapController.StopStapServer",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Stap"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/stap/ping/{uuid}": {
            "get": {
                "tags": [
                    "stap"
                ],
                "description": "ping stap servers",
                "operationId": "StapController.PingStap",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.stap"
                        }
                    }
                }
            }
        },
        "/stap/server/{uuid}": {
            "get": {
                "tags": [
                    "stap"
                ],
                "description": "get a server stap",
                "operationId": "StapController.GetServer",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.stap"
                        }
                    }
                }
            }
        },
        "/suricata/": {
            "get": {
                "tags": [
                    "suricata"
                ],
                "description": "get Surucata status",
                "operationId": "SuricataController.GetSuricata",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "suricata"
                ],
                "description": "Save Configuration files from Master",
                "operationId": "SuricataController.SaveConfigFile",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Node"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/suricata/KillSuricataMainConf": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Kill Suricata Main Conf",
                "operationId": "SuricataController.KillSuricataMainConf",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/suricata/ReloadSuricataMainConf": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Reload Suricata Main Conf",
                "operationId": "SuricataController.ReloadSuricataMainConf",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/suricata/RunSuricata": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Run suricata system",
                "operationId": "SuricataController.RunSuricata",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/suricata/StartSuricataMainConf": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Start Suricata Main Conf",
                "operationId": "SuricataController.StartSuricataMainConf",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/suricata/StopSuricata": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Run suricata system",
                "operationId": "SuricataController.StopSuricata",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/suricata/StopSuricataMainConf": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Stop Suricata Main Conf",
                "operationId": "SuricataController.StopSuricataMainConf",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/suricata/bpf": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Set Suricata BPF into filter.bpf file",
                "operationId": "SuricataController.PUT Suricata BPF",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    }
                }
            }
        },
        "/suricata/check": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Check Configuration",
                "operationId": "SuricataController.SuricataConfigurationTest",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    }
                }
            }
        },
        "/suricata/dump": {
            "get": {
                "tags": [
                    "suricata"
                ],
                "description": "Dump Suricata Configuration",
                "operationId": "SuricataController.DumpSuricataConfiguration",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    }
                }
            }
        },
        "/suricata/get": {
            "get": {
                "tags": [
                    "suricata"
                ],
                "description": "get all Suricata services",
                "operationId": "SuricataController.GetSuricataServices",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    }
                }
            }
        },
        "/suricata/getMD5files": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Reload Suricata Main Conf",
                "operationId": "SuricataController.GetMD5files",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/suricata/service": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Add new Suricata Service",
                "operationId": "SuricataController.AddSuricataService()",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.suricata"
                        }
                    }
                }
            }
        },
        "/suricata/sync": {
            "put": {
                "tags": [
                    "suricata"
                ],
                "description": "Sync ruleset file from master",
                "operationId": "SuricataController.SyncRulesetFromMaster",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Node"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/wazuh/": {
            "get": {
                "tags": [
                    "wazuh"
                ],
                "description": "get Wazuh status",
                "operationId": "WazuhController.GetWazuh",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.wazuh"
                        }
                    }
                }
            }
        },
        "/wazuh/RunWazuh": {
            "put": {
                "tags": [
                    "wazuh"
                ],
                "description": "Run wazuh system",
                "operationId": "WazuhController.RunWazuh",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.wazuh"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/wazuh/StopWazuh": {
            "put": {
                "tags": [
                    "wazuh"
                ],
                "description": "Run wazuh system",
                "operationId": "WazuhController.StopWazuh",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.wazuh"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/wazuh/addWazuhFile": {
            "put": {
                "tags": [
                    "wazuh"
                ],
                "description": "Run wazuh system",
                "operationId": "WazuhController.AddWazuhFile",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.wazuh"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/wazuh/deleteWazuhFile": {
            "delete": {
                "tags": [
                    "wazuh"
                ],
                "description": "Run wazuh system",
                "operationId": "WazuhController.DeleteWazuhFile",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.wazuh"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/wazuh/loadFileLastLines": {
            "put": {
                "tags": [
                    "wazuh"
                ],
                "description": "Run wazuh system",
                "operationId": "WazuhController.LoadFileLastLines",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.wazuh"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/wazuh/pingWazuhFiles": {
            "get": {
                "tags": [
                    "wazuh"
                ],
                "description": "get Wazuh status",
                "operationId": "WazuhController.PingWazuhFiles",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.wazuh"
                        }
                    }
                }
            }
        },
        "/wazuh/saveFileContentWazuh": {
            "put": {
                "tags": [
                    "wazuh"
                ],
                "description": "Run wazuh system",
                "operationId": "WazuhController.SaveFileContentWazuh",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.wazuh"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/zeek/": {
            "get": {
                "tags": [
                    "zeek"
                ],
                "description": "get Zeek status",
                "operationId": "ZeekController.GetZeek",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "This should answer with a GetZeek so origin can verify status",
                "operationId": "ZeekController.Set",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "zeek"
                ],
                "description": "Save Configuration files from Master",
                "operationId": "ZeekController.SavePolicyFiles",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Node"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/zeek/LaunchZeekMainConf": {
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "Sync Zeek cluster file",
                "operationId": "ZeekController.LaunchZeekMainConf",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        },
        "/zeek/RunZeek": {
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "Run zeek system",
                "operationId": "ZeekController.RunZeek",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/zeek/StopZeek": {
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "Run zeek system",
                "operationId": "ZeekController.StopZeek",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/zeek/addClusterValue": {
            "post": {
                "tags": [
                    "zeek"
                ],
                "description": "Add zeek cluster value",
                "operationId": "ZeekController.AddClusterValue",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        },
        "/zeek/changeZeekMode": {
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "change zeek mode",
                "operationId": "ZeekController.ChangeZeekMode",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        },
        "/zeek/deleteClusterValue": {
            "delete": {
                "tags": [
                    "zeek"
                ],
                "description": "Delete Zeek status",
                "operationId": "ZeekController.DeleteClusterValue",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        },
        "/zeek/editClusterValue": {
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "Edit Zeek status",
                "operationId": "ZeekController.EditClusterValue",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        },
        "/zeek/pingCluster": {
            "get": {
                "tags": [
                    "zeek"
                ],
                "description": "get Zeek cluster elements",
                "operationId": "ZeekController.PingCluster",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        },
        "/zeek/syncCluster": {
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "Sync Zeek cluster",
                "operationId": "ZeekController.SyncCluster",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        },
        "/zeek/syncClusterFile": {
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "Sync Zeek cluster file",
                "operationId": "ZeekController.SyncClusterFile",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        },
        "/zeek/syncZeekValues": {
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "Sync Zeek cluster file",
                "operationId": "ZeekController.SyncZeekValues",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        },
        "/zeek/{command}": {
            "put": {
                "tags": [
                    "zeek"
                ],
                "description": "run zeekctl command stop - start - deploy - status -diag",
                "operationId": "ZeekController.Run Zeekctl command",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.zeek"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Collector": {
            "title": "Collector",
            "type": "object"
        },
        "models.Node": {
            "title": "Node",
            "type": "object"
        },
        "models.Stap": {
            "title": "Stap",
            "type": "object"
        },
        "models.analyzer": {
            "title": "analyzer",
            "type": "object"
        },
        "models.changecontrol": {
            "title": "changecontrol",
            "type": "object"
        },
        "models.file": {
            "title": "file",
            "type": "object"
        },
        "models.incidents": {
            "title": "incidents",
            "type": "object"
        },
        "models.monitor": {
            "title": "monitor",
            "type": "object"
        },
        "models.ping": {
            "title": "ping",
            "type": "object"
        },
        "models.ports": {
            "title": "ports",
            "type": "object"
        },
        "models.stap": {
            "title": "stap",
            "type": "object"
        },
        "models.suricata": {
            "title": "suricata",
            "type": "object"
        },
        "models.wazuh": {
            "title": "wazuh",
            "type": "object"
        },
        "models.zeek": {
            "title": "zeek",
            "type": "object"
        }
    }
}